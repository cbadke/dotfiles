[user]
	name = Curtis Badke
	email = cbadke@gmail.com

[diff]
	renames = true
[mergetool]
	keepBackup = false
[log]
	date = relative
[color]
	ui = auto
[alias]
	aa = add --all .
	amend = commit --amend
	b = branch
	ce = commit --allow-empty
	ci = commit
	cm = commit -m
	co = checkout
	d = diff
	dc = diff --cached
	dh1 = diff -w HEAD~1 HEAD
	ds = diff --stat=160,120
	dw = diff -w
	dwc = diff -w --cached
	fa = fetch --all --prune
	ff = pull --ff-only --prune
	lg = log --graph --date-order -C -M --pretty=format:\"<%Cred%h%Creset> %ad [%C(yellow)%an%Creset] %Cgreen%d%Creset %s\" --all --date=short
	new = log origin/master.. --reverse -C -M --pretty=format:\"<%Cred%h%Creset> %ad [%C(yellow)%an%Creset] %Cgreen%d%Creset %s\" --all --date=short
	noff = merge --no-ff
	po = push origin 
	pom = push origin master
	prn = remote prune
	prno = remote prune origin
	recent = for-each-ref --sort=-committerdate --count=10 --format=‘%(refname:short)’ refs/heads/
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase -i
	rbim = rebase -i origin/master
	rbm = rebase origin/master
	s = status
	scrub = !git clean -xfd && git reset --hard
	st = status

	#https://github.com/brauliobo/gitconfig/blob/master/configs/.gitconfig
	# git change-commits GIT_COMMITTER_NAME "old name" "new name"
	change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "
	# from https://help.github.com/articles/remove-sensitive-data
	remove-file = "!f() { git filter-branch -f --index-filter \"git rm --cached --ignore-unmatch $1\" --prune-empty --tag-name-filter cat -- --all; }; f"

[merge]
	tool = vimdiff
[core]
	editor = vim
	pager = diff-so-fancy | less --tabs=2 -RFX
[pull]
	rebase = true
